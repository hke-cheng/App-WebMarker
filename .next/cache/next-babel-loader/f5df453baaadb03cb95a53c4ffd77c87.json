{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nimport { useState } from \"react\";\nexport default (initialWebLists => {\n  const {\n    0: webLists,\n    1: setWebLists\n  } = useState(initialWebLists);\n  const {\n    0: activeId,\n    1: setActiveId\n  } = useState(1);\n  const onPageData = webLists.filter(webList => webList.id === activeId);\n  return {\n    webLists,\n    activeId,\n    onPageData,\n    //List of methods\n    addWebLists: () => {\n      setWebLists([...WebLists, {\n        id: uuidv4(),\n        webs: []\n      }]);\n    },\n    //onActiveTab\n    findActiveId: newId => {\n      setActiveId(newId);\n      console.log(`runed functionActiveId + ${newId}`);\n    } //OnPage Data\n    //Add List\n    //Rename List\n    //Delete a List\n    //Move Web into a List\n    //Remove a web from a list\n\n  };\n});","map":{"version":3,"sources":["/Users/chenghanke/Desktop/编程学习/App-markWebsite/hooks/useWebListsState.js"],"names":["v4","uuidv4","useState","initialWebLists","webLists","setWebLists","activeId","setActiveId","onPageData","filter","webList","id","addWebLists","WebLists","webs","findActiveId","newId","console","log"],"mappings":"AAAA,SAASA,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAAQC,QAAR,QAAuB,OAAvB;AAEA,gBAAeC,eAAe,IAAI;AAEhC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAAyBH,QAAQ,CAACC,eAAD,CAAvC;AACA,QAAM;AAAA,OAACG,QAAD;AAAA,OAAUC;AAAV,MAAyBL,QAAQ,CAAC,CAAD,CAAvC;AAEA,QAAMM,UAAU,GAAGJ,QAAQ,CAACK,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeL,QAA1C,CAAnB;AAEA,SAAO;AACLF,IAAAA,QADK;AACKE,IAAAA,QADL;AACcE,IAAAA,UADd;AAGL;AACAI,IAAAA,WAAW,EAAE,MAAM;AACjBP,MAAAA,WAAW,CAAC,CAAC,GAAGQ,QAAJ,EAAc;AAAEF,QAAAA,EAAE,EAAEV,MAAM,EAAZ;AAAgBa,QAAAA,IAAI,EAAC;AAArB,OAAd,CAAD,CAAX;AACD,KANI;AAQL;AACAC,IAAAA,YAAY,EAACC,KAAK,IAAI;AACpBT,MAAAA,WAAW,CAACS,KAAD,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAa,4BAA2BF,KAAM,EAA9C;AACD,KAZI,CAcL;AAGA;AAEA;AAEA;AAEA;AAEA;;AAzBK,GAAP;AA4BD,CAnCD","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport {useState} from \"react\";\n\nexport default initialWebLists => {\n\n  const [webLists, setWebLists]= useState(initialWebLists);\n  const [activeId,setActiveId] = useState(1);\n\n  const onPageData = webLists.filter(webList => webList.id === activeId)\n\n  return {\n    webLists, activeId,onPageData,\n\n    //List of methods\n    addWebLists: () => {\n      setWebLists([...WebLists, { id: uuidv4(), webs:[]}]);\n    },\n\n    //onActiveTab\n    findActiveId:newId => {\n      setActiveId(newId);\n      console.log(`runed functionActiveId + ${newId}`);\n    }\n\n    //OnPage Data\n   \n\n    //Add List\n\n    //Rename List\n\n    //Delete a List\n\n    //Move Web into a List\n\n    //Remove a web from a list\n  }\n\n}"]},"metadata":{},"sourceType":"module"}