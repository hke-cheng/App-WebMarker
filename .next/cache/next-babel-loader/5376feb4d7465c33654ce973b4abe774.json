{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _s = $RefreshSig$();\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { useState } from \"react\";\nexport default _s(function (initialWebLists) {\n  _s();\n\n  var _useState = useState(initialWebLists),\n      webLists = _useState[0],\n      setWebLists = _useState[1];\n\n  var _useState2 = useState(),\n      activeId = _useState2[0],\n      setActiveId = _useState2[1];\n\n  return {\n    webLists: webLists,\n    activeId: activeId,\n    //List of methods\n    addWebLists: function addWebLists() {\n      setWebLists([].concat(_toConsumableArray(WebLists), [{\n        id: uuidv4(),\n        webs: []\n      }]));\n    },\n    //onActiveTab\n    findActiveId: function findActiveId(newId) {\n      setActiveId(newId);\n    } //Add List\n    //Rename List\n    //Delete a List\n    //Move Web into a List\n    //Remove a web from a list\n\n  };\n}, \"Nxn9c/cTjnxni7MleKiVe+G3NP8=\");","map":{"version":3,"sources":["/Users/chenghanke/Desktop/编程学习/App-markWebsite/hooks/useWebListsState.js"],"names":["v4","uuidv4","useState","initialWebLists","webLists","setWebLists","activeId","setActiveId","addWebLists","WebLists","id","webs","findActiveId","newId"],"mappings":";;;;AAAA,SAASA,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAAQC,QAAR,QAAuB,OAAvB;AAEA,kBAAe,UAAAC,eAAe,EAAI;AAAA;;AAAA,kBAEDD,QAAQ,CAACC,eAAD,CAFP;AAAA,MAEzBC,QAFyB;AAAA,MAEfC,WAFe;;AAAA,mBAIDH,QAAQ,EAJP;AAAA,MAIzBI,QAJyB;AAAA,MAIhBC,WAJgB;;AAMhC,SAAO;AACLH,IAAAA,QAAQ,EAARA,QADK;AACKE,IAAAA,QAAQ,EAARA,QADL;AAGL;AACAE,IAAAA,WAAW,EAAE,uBAAM;AACjBH,MAAAA,WAAW,8BAAKI,QAAL,IAAe;AAAEC,QAAAA,EAAE,EAAET,MAAM,EAAZ;AAAgBU,QAAAA,IAAI,EAAC;AAArB,OAAf,GAAX;AACD,KANI;AAQL;AACAC,IAAAA,YAAY,EAAC,sBAAAC,KAAK,EAAI;AACpBN,MAAAA,WAAW,CAACM,KAAD,CAAX;AACD,KAXI,CAaL;AAEA;AAEA;AAEA;AAEA;;AArBK,GAAP;AAwBD,CA9BD","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport {useState} from \"react\";\n\nexport default initialWebLists => {\n\n  const [webLists, setWebLists]= useState(initialWebLists);\n  \n  const [activeId,setActiveId] = useState();\n\n  return {\n    webLists, activeId,\n\n    //List of methods\n    addWebLists: () => {\n      setWebLists([...WebLists, { id: uuidv4(), webs:[]}]);\n    },\n\n    //onActiveTab\n    findActiveId:newId => {\n      setActiveId(newId)\n    }\n\n    //Add List\n\n    //Rename List\n\n    //Delete a List\n\n    //Move Web into a List\n\n    //Remove a web from a list\n  }\n\n}"]},"metadata":{},"sourceType":"module"}